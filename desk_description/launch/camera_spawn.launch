<launch>
    <!--Argument in this launch file-->
    <arg name="namespace" default="c0" />
    <!-- Generate the tf_prefix from the namespace -->
    <arg name="tfpre" default="$(arg namespace)_tf" />
    <!-- Put value on the parameter server in the group's namespace -->
    <param name="tf_prefix" value="$(arg namespace)_tf" />
    <!-- Initial pose - see "rosrun gazebo_ros spawn_model -h" for syntax -->
    <arg name="gazebo_pose" default="-x 0 -y 0 -z 0.1 -R 0 -P 0 -Y 0"/>

    <!-- Convert an xacro and put on parameter server-->
    <param name="robot_description" command="python $(find xacro)/xacro.py $(find desk_description)/robots/camera.urdf.xacro
    nsp:=$(arg namespace) tfpre:=$(arg tfpre)" />

    <!-- Spawn a robot into Gazebo -->
    <node name="spawn_desk_camera" pkg="gazebo_ros" type="spawn_model"
      args="$(arg gazebo_pose) -unpause -urdf -param robot_description -model desk_camera_$(arg namespace)"
      respawn="false" output="screen"/>

    <!--Publish robot state-->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
       <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <node name="desk_tf_broadcaster" pkg="desk_tf" type="desk_tf_broadcaster" args="c1_tf" />
    <!--static_transform_publisher x y z yaw pitch roll frame_id child_frame_id period_in_ms
    Publish a static coordinate transform to tf using an x/y/z offset in meters and
    yaw/pitch/roll in radians. (yaw is rotation about Z, pitch is rotation about Y, and roll is rotation about X).
    The period, in milliseconds, specifies how often to send a transform. 100ms (10hz) is a good value. -->
    <!--arg name="rviz_pose" default="0.738141 1.07112 2.275 1.57 1.57 0"/--> <!--xyzypr-->
    <!--node pkg="tf" type="static_transform_publisher" name="artagToDesk_broadcaster"
      args="$(arg rviz_pose) /$(arg tfpre)/c1_tf/deskCam_base_link 100"
      respawn="true"/-->

</launch>
