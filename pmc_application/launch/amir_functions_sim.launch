<launch>
  <arg name="ns" default="neuronbot/mmp0"/>

  <!-- base -->
  <arg name="odom_topic" default="$(arg ns)/odom"/>
  <arg name="cmd_vel_topic" default="$(arg ns)/cmd_vel"/>

  <!-- artag -->
  <arg name="marker_size" default="9.0" />
  <arg name="max_new_marker_error" default="0.08" />
  <arg name="max_track_error" default="0.2" />
  <arg name="cam_image_topic" default="$(arg ns)/usb_cam_front/image_raw" />
  <arg name="cam_info_topic" default="$(arg ns)/usb_cam_front/camera_info" />
  <arg name="output_frame" default="$(arg ns)/front_cam_link" />
  <arg name="bundle_files" default="$(find neuronbot_alignment)/bundles/MarkerData_1_3_5_7.xml" />

  <!-- retreat -->
  <arg name="move_back_vel" default="0.1"/>
  <arg name="move_back_dist" default="0.2"/>
  <arg name="rotate_vel" default="0.2"/>
  <arg name="angle_th" default="0.2"/>

  <!-- grasping -->
  <arg name="fixed_gsp" default="true"/>
  <arg name="sim_pp" default="false"/>
  <arg name="above_target_dist" default="0.05"/>

  <rosparam command="load" file="$(find ira_factory_tasks)/config/task_configs_real.yaml" />

  <node name="dynamic_station_server" pkg="neuronbot_dynamic_station" type="dynamicStationServer.py" output="screen"/>
  <!--node name="tfServer" pkg="ira_factory_state_machine" type="tfServer.py" output="screen"/>
  <node name="gspServer" pkg="neuronbot_gsp_detection" type="gspServer.py" output="screen">
    <param name="fixed_gsp" value="$(arg fixed_gsp)"/>
  </node-->

  <group ns="$(arg ns)">
    <param name="odom_topic" value="$(arg odom_topic)"/>
    <param name="cmd_vel_topic" value="$(arg cmd_vel_topic)"/>

    <!-- basic task functions -->
    <node name="voice_command_server" pkg="neuronbot_voice_command" type="voiceCommandServer.py" output="screen"/>
    <node name="neuronbot_alignment" pkg="neuronbot_alignment" type="alignment.py" output="screen"/>
    <node name="pickplace_server_origin" pkg="neuronbot_pick_place" type="pickplace_server_origin.py" output="screen">
      <param name="sim" value="$(arg sim_pp)"/>
      <param name="above_target_dist" value="$(arg above_target_dist)"/>
    </node>

    <!-- core state machine -->
    <node name="robot_status_state_machine" pkg="ira_factory_state_machine" type="robotStatusStateMachine.py" output="screen"/>
    <node name="retreat_state_machine" pkg="ira_factory_state_machine" type="retreatStateMachine.py" output="screen">
      <param name="move_back_vel" value="$(arg move_back_vel)"/>
      <param name="move_back_dist" value="$(arg move_back_dist)"/>
      <param name="rotate_vel" value="$(arg rotate_vel)"/>
      <param name="angle_th" value="$(arg angle_th)"/>
    </node>
    <node name="task_state_machine" pkg="ira_factory_state_machine" type="taskStateMachine.py" output="screen"/>
    <node name="nav_state_machine" pkg="ira_factory_state_machine" type="navStateMachine.py" output="screen"/>
    <node name="robot_status_publisher" pkg="ira_factory_state_machine" type="robotStatusPublisher.py" output="screen"/>
    <node name="work_group_publisher" pkg="ira_factory_state_machine" type="workGroupPublisher.py" output="screen"/>
    <node name="tfServer" pkg="ira_factory_state_machine" type="tfServer.py" output="screen"/>
    <node name="gspServer" pkg="neuronbot_gsp_detection" type="gspServer.py" output="screen">
      <param name="fixed_gsp" value="$(arg fixed_gsp)"/>
    </node>
  </group>
</launch>
